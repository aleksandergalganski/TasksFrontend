{"version":3,"sources":["actions/authActions.js","actions/types.js","actions/tasksActions.js","components/layout/Navbar.js","components/layout/Alert.js","components/layout/Spinner.js","components/auth/Login.js","components/auth/Register.js","components/tasks/TaskItem.js","components/tasks/FinishedTasks.js","components/tasks/AddTaskDialog.js","components/tasks/RunningTasks.js","components/tasks/TodoTasks.js","components/tasks/Tasks.js","components/routing/ProtectedRoute.js","reducers/tasksReducer.js","reducers/authReducer.js","reducers/index.js","store.js","components/layout/Footer.js","App.js","index.js"],"names":["setError","message","dispatch","a","errorHandler","type","payload","setTimeout","getTasks","state","axios","get","process","params","headers","auth","token","res","data","console","error","response","statusText","addTask","name","post","connect","logout","clearTasks","isAuthenticated","style","marginBottom","AppBar","className","Typography","variant","Button","color","onClick","to","Alert","props","elevation","margin","spinnerStyle","display","justifyContent","Spinner","CircularProgress","disableShrink","useStyles","makeStyles","theme","login","loginForm","width","flexDirection","formControl","spacing","email","password","loginData","classes","history","useEffect","push","useState","setEmail","setPassword","loading","onSubmit","e","preventDefault","severity","align","FormControl","InputLabel","htmlFor","Input","value","onChange","target","startAdornment","InputAdornment","position","register","registerData","password2","setPassword2","deleteTask","id","delete","changeTaskType","previousType","newType","put","task","Fragment","ListItem","ListItemIcon","Checkbox","edge","disableRipple","ListItemText","primary","secondary","format","createdAt","ListItemSecondaryAction","IconButton","aria-label","tasks","finishedTasks","Card","CardContent","List","length","map","key","AddTaskDialog","onClose","open","setName","Dialog","aria-labelledby","DialogTitle","DialogContent","TextField","label","DialogActions","runningTasks","setOpen","Fab","size","todoTasks","clearSnackBar","snackBarMessage","padding","Grid","container","justify","item","lg","md","sm","xs","Snackbar","anchorOrigin","vertical","horizontal","Component","component","rest","render","initialState","localStorage","getItem","user","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Footer","App","exact","path","Tasks","Login","Register","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.64b2560a.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER,\r\n  SET_AUTH_ERROR,\r\n  SET_LOADING,\r\n  GET_USER,\r\n  CLEAR_AUTH_ERROR\r\n} from './types';\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n  try {\r\n    dispatch({ type: SET_LOADING });\r\n    const loginData = { email, password };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URI}/api/v1/auth/login`,\r\n      loginData,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({ type: LOGIN, payload: res.data.token });\r\n  } catch (err) {\r\n    errorHandler(dispatch, err.response.data.message);\r\n  }\r\n};\r\n\r\nexport const register = (email, password) => async dispatch => {\r\n  try {\r\n    dispatch({ type: SET_LOADING });\r\n    const registerData = { email, password };\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URI}/api/v1/auth/register`,\r\n      registerData,\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      }\r\n    );\r\n\r\n    dispatch({ type: REGISTER, payload: res.data.token });\r\n  } catch (err) {\r\n    errorHandler(dispatch, err.response.data.message);\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n\r\nexport const getUser = () => async (dispatch, state) => {\r\n  try {\r\n    const res = await axios.get(`${process.env.REACT_APP_API_URI}/api/v1/auth/whoami`, {\r\n      headers: {\r\n        'x-auth-token': state().auth.token\r\n      }\r\n    });\r\n\r\n    dispatch({ type: GET_USER, payload: res.data.data });\r\n  } catch (err) {}\r\n};\r\n\r\nexport const setError = message => async dispatch => {\r\n  errorHandler(dispatch, message);\r\n};\r\n\r\nconst errorHandler = (dispatch, message) => {\r\n  dispatch({ type: SET_AUTH_ERROR, payload: message });\r\n  setTimeout(() => dispatch({ type: CLEAR_AUTH_ERROR }), 2000);\r\n};\r\n","// Tasks\r\nexport const GET_TODO_TASKS = 'GET_TODO_TASKS';\r\nexport const GET_RUNNING_TASKS = 'GET_RUNNING_TASKS';\r\nexport const GET_FINISHED_TASKS = 'GET_FINISHED_TASKS';\r\nexport const SET_TASK_AS_RUNNING = 'SET_TASK_AS_RUNNING';\r\nexport const SET_TASK_AS_FINISHED = 'SET_TASK_AS_FINISHED';\r\nexport const ADD_RUNNING_TASK = 'ADD_RUNNING_TASK';\r\nexport const ADD_TODO_TASK = 'ADD_TODO_TASK ';\r\nexport const DELETE_RUNNING_TASK = 'DELETE_RUNNING_TASK';\r\nexport const DELETE_TODO_TASK = 'DELETE_TODO_TASK';\r\nexport const DELETE_FINISHED_TASK = 'DELETE_FINISHED_TASK';\r\nexport const CLEAR_TASKS = 'CLEAR_TASKS';\r\nexport const CLEAR_SNACKBAR = 'CLEAR_SNACKBAR';\r\n\r\n// Loading\r\nexport const SET_LOADING = 'SET_LOADING';\r\n\r\n// Auth\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_USER = 'GET_USER';\r\nexport const SET_AUTH_ERROR = 'AUTH_ERROR';\r\nexport const CLEAR_AUTH_ERROR = 'CLEAR_AUTH_ERROR';\r\n","import axios from 'axios';\r\nimport {\r\n  GET_TODO_TASKS,\r\n  GET_RUNNING_TASKS,\r\n  GET_FINISHED_TASKS,\r\n  SET_TASK_AS_RUNNING,\r\n  SET_TASK_AS_FINISHED,\r\n  ADD_RUNNING_TASK,\r\n  ADD_TODO_TASK,\r\n  DELETE_TODO_TASK,\r\n  DELETE_RUNNING_TASK,\r\n  DELETE_FINISHED_TASK,\r\n  CLEAR_TASKS,\r\n  SET_LOADING,\r\n  CLEAR_SNACKBAR\r\n} from './types';\r\n\r\nexport const getTasks = type => async (dispatch, state) => {\r\n  try {\r\n    dispatch({ type: SET_LOADING });\r\n\r\n    const res = await axios.get(`${process.env.REACT_APP_API_URI}/api/v1/tasks`, {\r\n      params: { type },\r\n      headers: {\r\n        'x-auth-token': state().auth.token\r\n      }\r\n    });\r\n\r\n    switch (type) {\r\n      case 'running':\r\n        dispatch({ type: GET_RUNNING_TASKS, payload: res.data.data });\r\n        break;\r\n      case 'todo':\r\n        dispatch({ type: GET_TODO_TASKS, payload: res.data.data });\r\n        break;\r\n      case 'finished':\r\n        dispatch({ type: GET_FINISHED_TASKS, payload: res.data.data });\r\n        break;\r\n      default:\r\n        dispatch({ type: GET_RUNNING_TASKS, payload: res.data.data });\r\n    }\r\n  } catch (err) {\r\n    console.error(err.response.statusText);\r\n  }\r\n};\r\n\r\nexport const changeTaskType = (id, previousType) => async (dispatch, state) => {\r\n  try {\r\n    dispatch({ type: SET_LOADING });\r\n\r\n    let newType = '';\r\n\r\n    switch (previousType) {\r\n      case 'todo':\r\n        newType = 'running';\r\n        break;\r\n      case 'running':\r\n        newType = 'finished';\r\n        break;\r\n      default:\r\n        newType = 'running';\r\n    }\r\n\r\n    const res = await axios.put(\r\n      `${process.env.REACT_APP_API_URI}/api/v1/tasks/${id}`,\r\n      {\r\n        type: newType\r\n      },\r\n      {\r\n        headers: {\r\n          'x-auth-token': state().auth.token\r\n        }\r\n      }\r\n    );\r\n\r\n    switch (previousType) {\r\n      case 'todo':\r\n        dispatch({ type: SET_TASK_AS_RUNNING, payload: res.data.data });\r\n        break;\r\n      case 'running':\r\n        dispatch({ type: SET_TASK_AS_FINISHED, payload: res.data.data });\r\n        break;\r\n      default:\r\n        dispatch({ type: SET_TASK_AS_RUNNING, payload: res.data.data });\r\n    }\r\n  } catch (err) {\r\n    console.error(err.response);\r\n  }\r\n};\r\n\r\nexport const addTask = (type, name) => async (dispatch, state) => {\r\n  try {\r\n    dispatch({ type: SET_LOADING });\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URI}/api/v1/tasks`,\r\n      { type, name },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-auth-token': state().auth.token\r\n        }\r\n      }\r\n    );\r\n\r\n    switch (type) {\r\n      case 'running':\r\n        dispatch({ type: ADD_RUNNING_TASK, payload: res.data.data });\r\n        break;\r\n      case 'todo':\r\n        dispatch({ type: ADD_TODO_TASK, payload: res.data.data });\r\n        break;\r\n      default:\r\n        dispatch({ type: ADD_RUNNING_TASK, payload: res.data.data });\r\n    }\r\n  } catch (err) {\r\n    console.error(err.response.data.message);\r\n  }\r\n};\r\n\r\nexport const deleteTask = (id, type) => async (dispatch, state) => {\r\n  try {\r\n    dispatch({ type: SET_LOADING });\r\n\r\n    await axios.delete(`${process.env.REACT_APP_API_URI}/api/v1/tasks/${id}`, {\r\n      headers: {\r\n        'x-auth-token': state().auth.token\r\n      }\r\n    });\r\n\r\n    switch (type) {\r\n      case 'running':\r\n        dispatch({ type: DELETE_RUNNING_TASK, payload: id });\r\n        break;\r\n      case 'todo':\r\n        dispatch({ type: DELETE_TODO_TASK, payload: id });\r\n        break;\r\n      case 'finished':\r\n        dispatch({ type: DELETE_FINISHED_TASK, payload: id });\r\n        break;\r\n      default:\r\n        dispatch({ type: DELETE_RUNNING_TASK, payload: id });\r\n    }\r\n  } catch (err) {\r\n    console.error(err.response.statusText);\r\n  }\r\n};\r\n\r\nexport const clearTasks = () => dispatch => {\r\n  dispatch({ type: CLEAR_TASKS });\r\n};\r\n\r\nexport const clearSnackBar = () => dispatch => dispatch({ type: CLEAR_SNACKBAR });\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from '../../actions/authActions';\r\nimport { clearTasks } from '../../actions/tasksActions';\r\n// Material UI\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport ToolBar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated }, logout, clearTasks }) => {\r\n  const onLogout = () => {\r\n    logout();\r\n    clearTasks();\r\n  };\r\n\r\n  return (\r\n    <nav style={{ marginBottom: '80px' }}>\r\n      <AppBar>\r\n        <ToolBar className='toolbar'>\r\n          <Typography variant='h6'>Tasks App</Typography>\r\n          <div className='toolbar__buttons'>\r\n            {isAuthenticated ? (\r\n              <Fragment>\r\n                <AccountCircle />\r\n                <Button color='inherit' onClick={onLogout}>\r\n                  Logout\r\n                </Button>\r\n              </Fragment>\r\n            ) : (\r\n              <Fragment>\r\n                <Button color='primary'>\r\n                  <Link to='/login'>Login</Link>\r\n                </Button>\r\n                <Button color='primary'>\r\n                  <Link to='/register'>Register</Link>\r\n                </Button>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </ToolBar>\r\n      </AppBar>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  logout: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout, clearTasks })(Navbar);\r\n","import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Alert = props => {\r\n  return (\r\n    <MuiAlert elevation={6} variant='filled' {...props} style={{ margin: '16px 0' }} />\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div style={spinnerStyle}>\r\n      <CircularProgress style={{ margin: '16px 0' }} disableShrink />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst spinnerStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { login, setError } from '../../actions/authActions';\r\nimport { Link } from 'react-router-dom';\r\nimport Alert from '../layout/Alert';\r\nimport Spinner from '../layout/Spinner';\r\n// Material UI\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { InputAdornment, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  login: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  loginForm: {\r\n    display: 'flex',\r\n    width: '400px',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(2, 0, 2, 0),\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nconst Login = props => {\r\n  const classes = useStyles();\r\n\r\n  const { auth, history, login, setError } = props;\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthenticated) {\r\n      history.push('/');\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [auth.isAuthenticated]);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (email === '' || password === '') {\r\n      setError('Email and password are empty');\r\n    } else {\r\n      login(email, password);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {auth.loading && <Spinner />}\r\n      <section className={classes.login}>\r\n        <form className={classes.loginForm} onSubmit={onSubmit}>\r\n          {auth.error && <Alert severity='error'>{auth.error}</Alert>}\r\n          <Typography variant='h5' align='center'>\r\n            Login\r\n          </Typography>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor='email'>Email</InputLabel>\r\n            <Input\r\n              name='email'\r\n              type='email'\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position='start'>\r\n                  <EmailIcon />\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor='password'>Password</InputLabel>\r\n            <Input\r\n              name='password'\r\n              type='password'\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position='start'>\r\n                  <LockOpenIcon />\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n          <Button\r\n            variant='contained'\r\n            type='submit'\r\n            color='primary'\r\n            style={{ width: '100%' }}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Link to='/register' className='auth-hint'>\r\n            Dont have an acccount? Register\r\n          </Link>\r\n        </form>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  login: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, setError })(Login);\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { register, setError } from '../../actions/authActions';\r\nimport Alert from '../layout/Alert';\r\nimport Spinner from '../layout/Spinner';\r\n// Material UI\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { InputAdornment, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  login: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  loginForm: {\r\n    display: 'flex',\r\n    width: '400px',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(2, 0, 2, 0),\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nconst Register = props => {\r\n  const classes = useStyles();\r\n\r\n  const { auth, history, register, setError } = props;\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthenticated) {\r\n      history.push('/');\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [auth.isAuthenticated]);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (email === '' || password === '' || password2 === '') {\r\n      setError('Fill in all inputs');\r\n    } else if (password !== password2) {\r\n      setError('Passwords are not the same');\r\n    } else {\r\n      register(email, password);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {auth.loading && <Spinner />}\r\n      <section className={classes.login}>\r\n        <form className={classes.loginForm} onSubmit={onSubmit}>\r\n          {auth.error && <Alert severity='error'>{auth.error}</Alert>}\r\n          <Typography variant='h5' align='center'>\r\n            Register\r\n          </Typography>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor='email'>Email</InputLabel>\r\n            <Input\r\n              name='email'\r\n              type='email'\r\n              value={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position='start'>\r\n                  <EmailIcon />\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor='password'>Password</InputLabel>\r\n            <Input\r\n              name='password'\r\n              type='password'\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position='start'>\r\n                  <LockOpenIcon />\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel htmlFor='password2'>Confirm Password</InputLabel>\r\n            <Input\r\n              name='password2'\r\n              type='password'\r\n              value={password2}\r\n              onChange={e => setPassword2(e.target.value)}\r\n              startAdornment={\r\n                <InputAdornment position='start'>\r\n                  <LockOpenIcon />\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </FormControl>\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n            style={{ width: '100%' }}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Link to='/login' className='auth-hint'>\r\n            Already have an acccount? Login\r\n          </Link>\r\n        </form>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  setError: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { register, setError })(Register);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeTaskType, deleteTask } from '../../actions/tasksActions';\r\nimport Moment from 'react-moment';\r\n// Material UI\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nconst TaskItem = ({ task, deleteTask, changeTaskType }) => {\r\n  const onChangeType = () => {\r\n    changeTaskType(task.id, task.type);\r\n  };\r\n\r\n  const onDeleteTask = () => {\r\n    deleteTask(task.id, task.type);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem>\r\n        {task.type !== 'finished' && (\r\n          <ListItemIcon>\r\n            <Checkbox edge='start' disableRipple color='primary' onClick={onChangeType} />\r\n          </ListItemIcon>\r\n        )}\r\n        <ListItemText\r\n          primary={task.name}\r\n          secondary={<Moment format='YYYY/MM/DD'>{task.createdAt}</Moment>}\r\n        />\r\n        <ListItemSecondaryAction>\r\n          <IconButton edge='end' aria-label='delete' onClick={onDeleteTask}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nTaskItem.propTypes = {\r\n  task: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteTask, changeTaskType })(TaskItem);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTasks } from '../../actions/tasksActions';\r\nimport TaskItem from './TaskItem';\r\n// Material UI\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst FinishedTasks = ({ getTasks, tasks: { finishedTasks } }) => {\r\n  useEffect(() => {\r\n    getTasks('finished');\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant='h6' align='center'>\r\n          Finished\r\n        </Typography>\r\n        <List>\r\n          {finishedTasks.length !== 0 ? (\r\n            finishedTasks.map(task => <TaskItem key={task.id} task={task} />)\r\n          ) : (\r\n            <ListItem>\r\n              <ListItemText primary='Add Tasks' />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tasks: state.tasks\r\n});\r\n\r\nFinishedTasks.propTypes = {\r\n  tasks: PropTypes.object.isRequired,\r\n  getTasks: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { getTasks })(FinishedTasks);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(2, 0, 2, 0),\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nconst AddTaskDialog = ({ onClose, open }) => {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const onAdd = () => {\r\n    onClose(name);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={onCancel} aria-labelledby='simple-dialog-title' open={open}>\r\n      <DialogTitle id='simple-dialog-title'>Add Task</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl className={classes.formControl}>\r\n          <TextField\r\n            id='task'\r\n            label='Task'\r\n            variant='outlined'\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant='contained' onClick={onAdd} color='primary'>\r\n          Add\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nAddTaskDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default AddTaskDialog;\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport AddTaskDialog from './AddTaskDialog';\r\nimport { getTasks, addTask } from '../../actions/tasksActions';\r\nimport TaskItem from './TaskItem';\r\n// Material UI\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst RunningTasks = ({ getTasks, addTask, tasks: { runningTasks } }) => {\r\n  useEffect(() => {\r\n    getTasks('running');\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    if (value) {\r\n      addTask('running', value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant='h6' align='center'>\r\n            Running\r\n          </Typography>\r\n          <List>\r\n            {runningTasks.length !== 0 ? (\r\n              runningTasks.map(task => <TaskItem key={task.id} task={task} />)\r\n            ) : (\r\n              <ListItem>\r\n                <ListItemText primary='Add Tasks' />\r\n              </ListItem>\r\n            )}\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <Fab color='primary' size='small' onClick={handleOpen}>\r\n                  <AddIcon />\r\n                </Fab>\r\n              </ListItemIcon>\r\n              <ListItemText primary='Add Running Task' />\r\n            </ListItem>\r\n          </List>\r\n        </CardContent>\r\n      </Card>\r\n      <AddTaskDialog open={open} onClose={handleClose} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tasks: state.tasks\r\n});\r\n\r\nRunningTasks.propTypes = {\r\n  tasks: PropTypes.object.isRequired,\r\n  getTasks: PropTypes.func.isRequired,\r\n  addTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { getTasks, addTask })(RunningTasks);\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getTasks, addTask } from '../../actions/tasksActions';\r\nimport AddTaskDialog from './AddTaskDialog';\r\nimport TaskItem from './TaskItem';\r\n// Material UI\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst TodoTasks = ({ getTasks, addTask, tasks: { todoTasks } }) => {\r\n  useEffect(() => {\r\n    getTasks('todo');\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    if (value) {\r\n      addTask('todo', value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant='h6' align='center'>\r\n            Todo\r\n          </Typography>\r\n          <List>\r\n            {todoTasks.length !== 0 ? (\r\n              todoTasks.map(task => <TaskItem key={task.id} task={task} />)\r\n            ) : (\r\n              <ListItem>\r\n                <ListItemText primary='Add Tasks' />\r\n              </ListItem>\r\n            )}\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <Fab color='primary' size='small' onClick={handleOpen}>\r\n                  <AddIcon />\r\n                </Fab>\r\n              </ListItemIcon>\r\n              <ListItemText primary='Add Running Task' />\r\n            </ListItem>\r\n          </List>\r\n        </CardContent>\r\n      </Card>\r\n      <AddTaskDialog open={open} onClose={handleClose} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tasks: state.tasks\r\n});\r\n\r\nTodoTasks.propTypes = {\r\n  tasks: PropTypes.object.isRequired,\r\n  getTasks: PropTypes.func.isRequired,\r\n  addTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { getTasks, addTask })(TodoTasks);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearSnackBar } from '../../actions/tasksActions';\r\nimport FinishedTasks from './FinishedTasks';\r\nimport RunningTasks from './RunningTasks';\r\nimport TodoTasks from './TodoTasks';\r\nimport Spinner from '../layout/Spinner';\r\n// Material UI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst Tasks = ({ tasks: { snackBarMessage, loading }, clearSnackBar }) => {\r\n  useEffect(() => {\r\n    if (snackBarMessage) {\r\n      setTimeout(() => clearSnackBar(), 1000);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [snackBarMessage]);\r\n\r\n  const snackBarSpacing = {\r\n    vertical: 'bottom',\r\n    horizontal: 'center'\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading && <Spinner />}\r\n      <section style={{ padding: '20px' }}>\r\n        <Grid container spacing={3} justify='center'>\r\n          <Grid item lg={4} md={6} sm={12} xs={12}>\r\n            <TodoTasks />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} sm={12} xs={12}>\r\n            <RunningTasks />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} sm={12} xs={12}>\r\n            <FinishedTasks />\r\n          </Grid>\r\n        </Grid>\r\n        {snackBarMessage && (\r\n          <Snackbar\r\n            anchorOrigin={snackBarSpacing}\r\n            open={true}\r\n            message={snackBarMessage}\r\n          />\r\n        )}\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tasks: state.tasks\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearSnackBar })(Tasks);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProtectedRoute = props => {\r\n  const { component: Component, auth, ...rest } = props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        auth.isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProtectedRoute);\r\n","import {\r\n  GET_TODO_TASKS,\r\n  GET_RUNNING_TASKS,\r\n  GET_FINISHED_TASKS,\r\n  SET_TASK_AS_RUNNING,\r\n  SET_TASK_AS_FINISHED,\r\n  ADD_RUNNING_TASK,\r\n  ADD_TODO_TASK,\r\n  DELETE_TODO_TASK,\r\n  DELETE_RUNNING_TASK,\r\n  DELETE_FINISHED_TASK,\r\n  CLEAR_TASKS,\r\n  SET_LOADING,\r\n  CLEAR_SNACKBAR\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  todoTasks: [],\r\n  runningTasks: [],\r\n  finishedTasks: [],\r\n  snackBarMessage: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TODO_TASKS:\r\n      return {\r\n        ...state,\r\n        todoTasks: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_RUNNING_TASKS:\r\n      return {\r\n        ...state,\r\n        runningTasks: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_FINISHED_TASKS:\r\n      return {\r\n        ...state,\r\n        finishedTasks: action.payload,\r\n        loading: false\r\n      };\r\n    case SET_TASK_AS_RUNNING:\r\n      return {\r\n        ...state,\r\n        todoTasks: state.todoTasks.filter(task => task.id !== action.payload.id),\r\n        runningTasks: [...state.runningTasks, action.payload],\r\n        snackBarMessage: 'Task set as running',\r\n        loading: false\r\n      };\r\n    case SET_TASK_AS_FINISHED:\r\n      return {\r\n        ...state,\r\n        runningTasks: state.runningTasks.filter(task => task.id !== action.payload.id),\r\n        finishedTasks: [...state.finishedTasks, action.payload],\r\n        snackBarMessage: 'Task set as finished',\r\n        loading: false\r\n      };\r\n    case ADD_RUNNING_TASK:\r\n      return {\r\n        ...state,\r\n        runningTasks: [...state.runningTasks, action.payload],\r\n        snackBarMessage: 'Task added',\r\n        loading: false\r\n      };\r\n    case ADD_TODO_TASK:\r\n      return {\r\n        ...state,\r\n        todoTasks: [...state.todoTasks, action.payload],\r\n        snackBarMessage: 'Task added',\r\n        loading: false\r\n      };\r\n    case DELETE_RUNNING_TASK:\r\n      return {\r\n        ...state,\r\n        runningTasks: state.runningTasks.filter(task => task.id !== action.payload),\r\n        snackBarMessage: 'Task deleted',\r\n        loading: false\r\n      };\r\n    case DELETE_TODO_TASK:\r\n      return {\r\n        ...state,\r\n        todoTasks: state.todoTasks.filter(task => task.id !== action.payload),\r\n        snackBarMessage: 'Task deleted',\r\n        loading: false\r\n      };\r\n    case DELETE_FINISHED_TASK:\r\n      return {\r\n        ...state,\r\n        finishedTasks: state.finishedTasks.filter(task => task.id !== action.payload),\r\n        snackBarMessage: 'Task deleted',\r\n        loading: false\r\n      };\r\n    case CLEAR_TASKS:\r\n      return {\r\n        ...state,\r\n        finishedTasks: [],\r\n        todoTasks: [],\r\n        runningTasks: []\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case CLEAR_SNACKBAR:\r\n      return {\r\n        ...state,\r\n        snackBarMessage: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER,\r\n  SET_AUTH_ERROR,\r\n  CLEAR_AUTH_ERROR,\r\n  GET_USER,\r\n  SET_LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  user: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      localStorage.setItem('token', action.payload);\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER:\r\n      localStorage.setItem('token', action.payload);\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case SET_AUTH_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    case CLEAR_AUTH_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport tasksReducer from './tasksReducer';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n  tasks: tasksReducer,\r\n  auth: authReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initalState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initalState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='footer'>\r\n      <div className='footer__icons'>\r\n        <div className='footer__icon'>\r\n          <i className='fab fa-facebook-f'></i>\r\n        </div>\r\n        <div className='footer__icon'>\r\n          <i className='fab fa-twitter'></i>\r\n        </div>\r\n        <div className='footer__icon'>\r\n          <i className='fab fa-instagram'></i>\r\n        </div>\r\n      </div>\r\n      <Typography variant='body1' className='footer__text'>\r\n        &copy; 2020 TasksApp\r\n      </Typography>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Navbar from './components/layout/Navbar';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Tasks from './components/tasks/Tasks';\nimport ProtectedRoute from './components/routing/ProtectedRoute';\nimport './App.css';\nimport store from './store';\nimport { getUser } from './actions/authActions';\nimport Footer from './components/layout/Footer';\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(getUser());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <main>\n          <Navbar />\n          <div className='container'>\n            <Switch>\n              <ProtectedRoute exact path='/' component={Tasks} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/register' component={Register} />\n            </Switch>\n          </div>\n        </main>\n        <Footer />\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}